{"version":3,"sources":["webpack:///./src/components/docs/SwitchVersion.js","webpack:///./src/templates/doc.js"],"names":["versions","unshift","current","SwitchVersion","_ref","location","currentVersion","react_default","a","createElement","onChange","e","targetVersion","getPrefixedVersion","target","value","path","pathname","replace","navigate","doChange","slice","map","version","formattedVersion","correspondingVersion","constants","key","toUpperCase","propTypes","PropTypes","object","isRequired","string","Template","pageContext","Layout","className","Helmet_default","title","rel","href","siteUrl","RegExp","join","name","content","docs_SwitchVersion","dangerouslySetInnerHTML","__html","html","editPath","previous","slug","gatsby_browser_entry","to","next","DocNav","nav","chapters"],"mappings":"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","file":"component---src-templates-doc-js-4072c79f4ba50a06e341.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { navigate } from 'gatsby';\nimport constants, { current, versions } from '../../../constants';\nimport { getPrefixedVersion } from '../../lib/versionHelper';\n\nversions.unshift(current);\n\nconst doChange = (e, location, currentVersion) => {\n  const targetVersion = getPrefixedVersion(e.target.value);\n\n  if (current === targetVersion) {\n    const path = location.pathname.replace(currentVersion, '');\n    navigate(path);\n    return;\n  }\n\n  if ('' === currentVersion) {\n    const path = location.pathname.replace('docs/', `docs/${targetVersion}/`);\n    navigate(path);\n    return;\n  }\n\n  const path = location.pathname.replace(currentVersion, `${targetVersion}/`);\n  navigate(path);\n};\n\nconst SwitchVersion = ({ location, currentVersion }) => (\n  <select\n    onChange={e => doChange(e, location, currentVersion)}\n    value={'' === currentVersion ? current : currentVersion.slice(0, -1)}\n  >\n    {versions.map(version => {\n      const formattedVersion = getPrefixedVersion(version);\n      const correspondingVersion = constants[`${version}Version`];\n      return (\n        <option key={formattedVersion} value={formattedVersion}>\n          {(\n            formattedVersion + (correspondingVersion ? ` (${getPrefixedVersion(correspondingVersion)})` : '')\n          ).toUpperCase()}\n        </option>\n      );\n    })}\n  </select>\n);\n\nexport default SwitchVersion;\n\nSwitchVersion.propTypes = {\n  location: PropTypes.object.isRequired,\n  currentVersion: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Layout from '../components/Layout';\nimport DocNav from '../components/layout/DocNav';\nimport SwitchVersion from '../components/docs/SwitchVersion';\nimport { siteUrl, versions } from '../../constants';\nimport { getPrefixedVersion } from '../lib/versionHelper';\n\nconst Template = ({ location, pageContext }) => (\n  <Layout location={location}>\n    <div className=\"page__docs\">\n      <Helmet title={(pageContext.title && pageContext.title) || 'Documentation'}>\n        {'' !== pageContext.version\n          ? [\n              <link\n                rel=\"canonical\"\n                href={\n                  siteUrl +\n                  location.pathname.replace(new RegExp(`/(${versions.map(getPrefixedVersion).join('|')})/`), '/')\n                }\n              />,\n              <meta name=\"robots\" content=\"noindex\" />,\n            ]\n          : false}\n      </Helmet>\n      <div className=\"container docs__content\">\n        <SwitchVersion location={location} currentVersion={pageContext.version} />\n        <div dangerouslySetInnerHTML={{ __html: pageContext.html }} />\n        <div>\n          <p>\n            <a\n              href={`https://github.com/api-platform/docs/edit/${process.env.GATSBY_BRANCH_NAME || 'master'}/${\n                pageContext.editPath\n              }`}\n            >\n              You can also help us improve the documentation of this page.\n            </a>\n          </p>\n        </div>\n      </div>\n      <div className=\"container docs__nav\">\n        {pageContext.previous.slug && (\n          <Link className=\"prev\" to={`/${pageContext.previous.slug}`}>\n            <i className=\"icon-chevron-left\" />\n            <span>{pageContext.previous.title}</span>\n          </Link>\n        )}\n        {pageContext.next.slug && (\n          <Link className=\"next\" to={`/${pageContext.next.slug}`}>\n            <span>{pageContext.next.title}</span>\n            <i className=\"icon-chevron-right\" />\n          </Link>\n        )}\n      </div>\n      <DocNav version={pageContext.version} nav={pageContext.nav.chapters} location={location} />\n    </div>\n  </Layout>\n);\n\nexport default Template;\n\nTemplate.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired,\n};\n"],"sourceRoot":""}